const histogram = require('./histogram');

test('test histogram', () => {
    expect(histogram.default([1, 1, 2, 3, 4, 5], 5)).toEqual([[0, 2], [1, 1], [2, 1], [3, 1], [4, 1]]);
    expect(histogram.default([1, 1, 1, 1, 1, 1], 5)).toEqual([[0, 6], [1, 0], [2, 0], [3, 0], [4, 0]]);
    expect(histogram.default([0, 0, 0, 0, 0, 0], 5)).toEqual([[0, 6], [1, 0], [2, 0], [3, 0], [4, 0]]);
    expect(histogram.default([1, 1, 1, 1, 1, 1], 5)).toEqual([[0, 6], [1, 0], [2, 0], [3, 0], [4, 0]]);
    expect(histogram.default([1, 1, 1, 1, 1, 1], 5, .95)).toEqual([[0, 6], [1, 0], [2, 0], [3, 0], [4, 0]]);
    expect(histogram.default([1, 1, 1, 5, 5, 5], 5)).toEqual([[0, 3], [1, 0], [2, 0], [3, 0], [4, 3]]);
    expect(histogram.default([1, 1, 1, 1, 1, 2], 5, .6)).toEqual([[0, 5], [1, 0], [2, 0], [3, 0], [4, 0]]);
    expect(histogram.default([1, 2, 3, 4, 5, 6], 3, .5)).toEqual([[0, 1], [1, 1], [2, 1]]);
    expect(histogram.default([-1, 2, 3, 4, 5, 6], 3, .5)).toEqual([[0, 1], [1, 0], [2, 2]]);
    expect(histogram.default([1, 1, 1, 2,2,2, 3, 3, 3], 3)).toEqual([[0, 3], [1, 3], [2, 3]]);
    expect(histogram.default([4, 5, 6, 8, 9, 10, 16, 17, 18, 23, 26, 27, 30, 31, 33, 34, 36,
        39, 40, 41, 48, 49, 50, 51, 52, 54, 56, 60, 61, 67, 69, 70, 71, 73, 75, 78, 80, 84, 92, 93, 95, 97, 99,
        101, 103, 105, 106, 111, 112, 114, 116, 118, 121, 123, 128, 130, 131, 132, 133, 137, 138, 139, 140,
        143, 144, 145, 147, 149, 150, 151, 152, 155, 156, 157, 161, 162, 163, 164, 168, 171, 172, 174, 175, 178,
        179, 180, 181, 183, 184, 185, 186, 189, 190, 197, 198, 199, 201, 202, 205, 210, 211, 212, 213, 214, 218,
        219, 221, 223, 227, 229, 231, 234, 235, 238, 239, 245, 246, 249, 250, 252, 254, 255, 257, 259, 261, 263,
        264, 267, 268, 270, 271, 272, 274, 275, 278, 279, 281, 282, 284, 285, 286, 289, 293, 295, 297, 298, 301,
        303, 309, 310, 312, 313, 314, 316, 317, 319, 320, 322, 323, 324, 326, 328, 331, 332, 337, 338, 342, 343,
        348, 351, 352, 353, 355, 357, 358, 359, 360, 361, 363, 364, 367, 375, 377, 378, 379, 384, 385, 387, 389,
        390, 391, 393, 395, 396, 397, 398, 400, 401, 403, 407, 410, 411, 412, 413, 414, 415, 417, 419, 422, 425,
        428, 429, 431, 433, 435, 436, 437, 440, 441, 442, 444, 448, 454, 455, 457, 459, 461, 467, 468, 475, 476,
        478, 479, 480, 482, 486, 487, 489, 493, 495, 496, 498, 499, 500, 501, 502, 503, 505, 511, 513, 514, 515,
        517, 520, 521, 523, 524, 527, 530, 532, 533, 535, 542, 544, 547, 549, 551, 555, 560, 563, 566, 573, 575,
        578, 579, 580, 581, 582, 583, 590, 592, 593, 595, 596, 597, 598, 599, 600, 602, 603, 605, 606, 613, 614,
        615, 616, 617, 619, 624, 625, 626, 627, 632, 633, 634, 635, 638, 640, 641, 642, 643, 644, 645, 648, 650,
        651, 652, 654, 655, 656, 661, 663, 666, 669, 671, 673, 676, 677, 680, 682, 683, 684, 685, 687, 688, 689,
        690, 693, 695, 697, 700, 701, 705, 706, 707, 708, 709, 711, 712, 713, 714, 717, 721, 727, 730, 732, 733,
        734, 735, 736, 737, 739, 740, 741, 743, 747, 750, 754, 756, 759, 764, 766, 769, 770, 771, 772, 775, 776,
        777, 778, 781, 782, 783, 784, 785, 790, 791, 796, 798, 800, 801, 802, 803, 807, 810, 811, 820, 821, 822,
        823, 825, 826, 828, 829, 833, 835, 838, 840, 841, 842, 844, 845, 846, 847, 849, 850, 856, 857, 860, 863,
        864, 867, 868, 871, 874, 877, 879, 881, 882, 884, 885, 886, 887, 890, 892, 893, 894, 895, 896, 897, 898,
        899, 901, 904, 905, 906, 907, 908, 910, 911, 912, 918, 919, 920, 921, 925, 928, 929, 930, 936, 937, 938,
        939, 940, 941, 943, 945, 947, 949, 950, 951, 953, 954, 955, 956, 957, 959, 960, 966, 967, 969, 970, 971,
        974, 979, 980, 982, 983, 985, 988, 989, 990, 992, 993, 994, 995, 996, 997, 999, 1000], 20))
    .toEqual([[0, 25], [1, 20], [2, 26], [3, 27], [4, 22], [5, 27], [6, 24], [7, 27], [8, 24], [9, 23], [10, 22],
        [11, 21], [12, 28], [13, 26], [14, 25], [15, 23], [16, 26], [17, 26], [18, 28], [19, 30]]);
    expect(histogram.default([1.38, 28.81, 67.46, 75.07, 24.09, 68.84, 40.89, 88.37, 59.86, 34.52,
        53.84, 34.78, 51.45, 99.9, 14.95, 84.46, 25.29, 97.49, 47, 2.56, 79.98, 45.48, 26.76, 86.14, 92.65, 80.88,
        97.8, 10.99, 8.23, 41.9, 85.8, 57.6, 40.55, 83.92, 17.71, 22.28, 29.17, 24.68, 62.66, 39.27, 61.27, 33.15,
        7.6, 49.72, 99.32, 5.7, 61.52, 18.45, 36.37, 83.71, 17.3, 5.46, 16.12, 49.76, 86.41, 73.94, 58.6, 44.86,
        22.94, 41.19, 79.09, 97.17, 19.78, 9.52, 30.49, 16.75, 63.9, 55.21, 48.18, 36.83, 23.26, 98.93, 99.23,
        53.83, 55.86, 18.76, 17.97, 92.1, 2.19, 1.03, 43.63, 49.38, 81.09, 27.23, 48.02, 49.35, 54.16, 34.5, 96.8,
        96.56, 96.18, 38.98, 1.81, 6.95, 86.84, 69.78, 91.33, 70.73, 55.8, 71.75], 20))
    .toEqual([[0, 7], [1, 4], [2, 2], [3, 8], [4, 6], [5, 5], [6, 4], [7, 5], [8, 6], [9, 7], [10, 5], [11, 5],
        [12, 4], [13, 3], [14, 4], [15, 2], [16, 5], [17, 5], [18, 3], [19, 10]]);
    expect(histogram.default([3.4,9.14,3.99,5.67,3.79,8.67,5.8,9.04,6.91,7.07,8.87,6.43,3.06,5,3.27,
        2.04,9.66,8.76,7.77,8.93,8.25,6.06,8.17,3.89,7.8,6.8,4.6,2.04,9.28,5.76,5.56,5.38,2.09,9.32,8.09,2.25,9.84,
        8.18,6,3.9,8.56,7.7,6.06,8.42,6.19,6.48,7.61,2.89,2.96,3.72,1.27,9.9,1.74,4.49,7.43,7.76,3.37,9.02,4.3,
        2.88,9.59,5.68,5.92,7.39,5.2,1.25,2.39,2.8,5.88,1.41,2.58,8.94,6.28,3.37,4.61,3.75,9.35,9.88,1.83,3.23,
        7.82,4.98,4.78,4.7,6.13,7.57,4.72,5.74,4.99,4.38,7.14,3.22,3.91,2.03,7.14,6.98,7.18,3.04,3.21,8.17], 10))
    .toEqual([[0, 9], [1, 7], [2, 12], [3, 10], [4, 8], [5, 14], [6, 8], [7, 10], [8, 12], [9, 10]]);
});

